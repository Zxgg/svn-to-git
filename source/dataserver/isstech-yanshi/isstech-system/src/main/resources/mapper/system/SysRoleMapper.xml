<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.isstech.isstechadmin.mapper.SysRoleMapper">

	<resultMap type="SysRole" id="SysRoleResult">
		<id     property="id"       column="id"        />
		<result property="name"     column="name"      />
		<result property="roleKey"      column="role_key"       />
		<result property="sort"     column="sort"      />
		<result property="dataScope"    column="data_scope"     />
		<result property="status"       column="status"         />
		<result property="delFlag"      column="del_flag"       />
		<result property="createBy"     column="create_by"      />
		<result property="createTime"   column="create_time"    />
		<result property="updateBy"     column="update_by"      />
		<result property="updateTime"   column="update_time"    />
		<result property="remark"       column="remark"         />
	</resultMap>
	
	<sql id="selectRoleVo">
	    select distinct r.id, r.name, r.role_key, r.sort, r.data_scope,
            r.status, r.del_flag, r.create_time, r.remark 
        from sys_role r
	        left join sys_user_role ur on ur.role_id = r.id
	        left join sys_user u on u.id = ur.user_id
	        left join sys_dept d on u.dept_id = d.id
    </sql>
    
    <select id="selectRoleList" parameterType="SysRole" resultMap="SysRoleResult">
		<include refid="selectRoleVo"/>
		where r.del_flag = '0'
		<if test="name != null and name != ''">
			AND r.name like concat('%', #{name}, '%')
		</if>
		<if test="status != null and status != ''">
			AND r.status = #{status}
		</if>
		<if test="roleKey != null and roleKey != ''">
			AND r.role_key like concat('%', #{roleKey}, '%')
		</if>
		<if test="beginTime != null and beginTime != ''"><!-- 开始时间检索 -->
			and date_format(r.create_time,'%y%m%d') &gt;= date_format(#{beginTime},'%y%m%d')
		</if>
		<if test="endTimes != null and endTimes != ''"><!-- 结束时间检索 -->
			and date_format(r.create_time,'%y%m%d') &lt;= date_format(#{endTimes},'%y%m%d')
		</if>
		<!-- 数据范围过滤 -->
		${params.dataScope}
		order by r.sort
	</select>
    
	<select id="selectRolePermissionByUserId" parameterType="String" resultMap="SysRoleResult">
		<include refid="selectRoleVo"/>
		WHERE r.del_flag = '0' and ur.user_id = #{userId}
	</select>
	
	<select id="selectRoleAll" resultMap="SysRoleResult">
		<include refid="selectRoleVo"/>
	</select>
	
	<select id="selectRoleListByUserId" parameterType="String" resultType="String">
		select r.id
        from sys_role r
	        left join sys_user_role ur on ur.role_id = r.id
	        left join sys_user u on u.id = ur.user_id
	    where u.id = #{userId}
	</select>
	
	<select id="selectRoleById" parameterType="String" resultMap="SysRoleResult">
		<include refid="selectRoleVo"/>
		where r.id = #{id}
	</select>
	
	<select id="selectRolesByUserName" parameterType="String" resultMap="SysRoleResult">
		<include refid="selectRoleVo"/>
		WHERE r.del_flag = '0' and u.user_name = #{userName}
	</select>
	
	<select id="checkRoleNameUnique" parameterType="String" resultMap="SysRoleResult">
		<include refid="selectRoleVo"/>
		 where r.name=#{name} limit 1
	</select>
	
	<select id="checkRoleKeyUnique" parameterType="String" resultMap="SysRoleResult">
		<include refid="selectRoleVo"/>
		 where r.role_key=#{roleKey} limit 1
	</select>

	<select id="selectUuid"  resultType="String">
        select uuid()
    </select>
	
 	<insert id="insertRole" parameterType="SysRole">
 		insert into sys_role(
 			<if test="id != null and id != ''">id,</if>
 			<if test="name != null and name != ''">name,</if>
 			<if test="roleKey != null and roleKey != ''">role_key,</if>
 			<if test="sort != null and sort != ''">sort,</if>
 			<if test="dataScope != null and dataScope != ''">data_scope,</if>
 			<if test="status != null and status != ''">status,</if>
 			<if test="remark != null and remark != ''">remark,</if>
 			<if test="createBy != null and createBy != ''">create_by,</if>
 			create_time
 		)values(
 			<if test="id != null and id != ''">#{id},</if>
 			<if test="name != null and name != ''">#{name},</if>
 			<if test="roleKey != null and roleKey != ''">#{roleKey},</if>
 			<if test="sort != null and sort != ''">#{sort},</if>
 			<if test="dataScope != null and dataScope != ''">#{dataScope},</if>
 			<if test="status != null and status != ''">#{status},</if>
 			<if test="remark != null and remark != ''">#{remark},</if>
 			<if test="createBy != null and createBy != ''">#{createBy},</if>
 			sysdate()
 		)
	</insert>
	
	<update id="updateRole" parameterType="SysRole">
 		update sys_role
 		<set>
 			<if test="name != null and name != ''">name = #{name},</if>
 			<if test="roleKey != null and roleKey != ''">role_key = #{roleKey},</if>
 			<if test="sort != null and sort != ''">sort = #{sort},</if>
 			<if test="dataScope != null and dataScope != ''">data_scope = #{dataScope},</if>
 			<if test="status != null and status != ''">status = #{status},</if>
 			<if test="remark != null">remark = #{remark},</if>
 			<if test="updateBy != null and updateBy != ''">update_by = #{updateBy},</if>
 			update_time = sysdate()
 		</set>
 		where id = #{id}
	</update>
	
	<update id="updateRoleStatus" parameterType="SysRole">
 		update sys_user set status = #{status} where id = #{userId}
	</update>
	
	<delete id="deleteRoleById" parameterType="String">
 		delete from sys_role where id = #{id}
 	</delete>
 	
 	<delete id="deleteRoleByIds" parameterType="String">
        delete from sys_role where id in
 		<foreach collection="array" item="id" open="(" separator="," close=")">
 			#{id}
        </foreach> 
 	</delete>

    <update id="updateRoleByIds" parameterType="String">
        update sys_role set del_flag = '1' where id in
        <foreach collection="array" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>

	<select id="selectDeptCommunityChildListByUserId" parameterType="String" resultType="com.isstech.isstechadmin.domain.BaseDeptCommunityChild">
        select bdcc.dept_ip as deptIp,bdcc.community_id as communityId,bdcc.community_child_id as communityChildId from sys_user_role sur,sys_role_dept srd,base_dept_community_child bdcc
 		where sur.user_id = #{userId} and srd.role_id = sur.role_id and bdcc.dept_ip = srd.dept_id;
    </select>

	<select id="selectDeptCommunityChildListMapByUserId" parameterType="String" resultType="java.util.Map">
        select bdcc.dept_ip as deptIp,bdcc.community_id as communityId,bdcc.community_child_id as communityChildId from sys_user_role sur,sys_role_dept srd,base_dept_community_child bdcc
 		where sur.user_id = #{userId} and srd.role_id = sur.role_id and bdcc.dept_ip = srd.dept_id;
    </select>

</mapper>