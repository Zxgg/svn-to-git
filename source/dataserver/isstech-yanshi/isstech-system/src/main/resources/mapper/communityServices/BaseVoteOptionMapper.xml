<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.isstech.isstechadmin.mapper.BaseVoteOptionMapper">

    <resultMap type="BaseVoteOption" id="BaseVoteOptionResult">
        <result property="id" column="id"/>
        <result property="createBy" column="create_by"/>
        <result property="createTime" column="create_time"/>
        <result property="updateBy" column="update_by"/>
        <result property="updateTime" column="update_time"/>
        <result property="delFlag" column="del_flag"/>
        <result property="remark" column="remark"/>
        <result property="name" column="name"/>
        <result property="sort" column="sort"/>
        <result property="status" column="status"/>
        <result property="voteProjectId" column="vote_project_id"/>
    </resultMap>

    <sql id="selectBaseVoteOptionVo">
        select id, create_by, create_time, update_by, update_time, del_flag, remark, name, sort, status, vote_project_id from base_vote_option
    </sql>

    <select id="selectBaseVoteOptionList" parameterType="BaseVoteOption" resultMap="BaseVoteOptionResult">
        <include refid="selectBaseVoteOptionVo"/>
        <where>
                del_flag = '0'
            <if test="name != null  and name != ''">
                and name like concat('%', #{name}, '%')
            </if>
            <if test="voteProjectId != null  and voteProjectId != ''">
                and vote_project_id = #{voteProjectId}
            </if>
        </where>
        order by sort
    </select>

    <select id="selectBaseVoteOptionById" parameterType="String" resultMap="BaseVoteOptionResult">
        <include refid="selectBaseVoteOptionVo"/>
        where id = #{id}
    </select>

    <insert id="insertBaseVoteOption" parameterType="BaseVoteOption">
        insert into base_vote_option
        <trim prefix="(" suffix=")" suffixOverrides=",">
            id,
            <if test="id != null">id,
            </if>
            <if test="createBy != null">create_by,
            </if>
            <if test="createTime != null">create_time,
            </if>
            <if test="updateBy != null">update_by,
            </if>
            <if test="updateTime != null">update_time,
            </if>
            <if test="delFlag != null">del_flag,
            </if>
            <if test="remark != null">remark,
            </if>
            <if test="name != null">name,
            </if>
            <if test="sort != null">sort,
            </if>
            <if test="status != null">status,
            </if>
            <if test="voteProjectId != null and voteProjectId != ''">vote_project_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            uuid(),
            <if test="id != null">#{id},
            </if>
            <if test="createBy != null">#{createBy},
            </if>
            <if test="createTime != null">#{createTime},
            </if>
            <if test="updateBy != null">#{updateBy},
            </if>
            <if test="updateTime != null">#{updateTime},
            </if>
            <if test="delFlag != null">#{delFlag},
            </if>
            <if test="remark != null">#{remark},
            </if>
            <if test="name != null">#{name},
            </if>
            <if test="sort != null">#{sort},
            </if>
            <if test="status != null">#{status},
            </if>
            <if test="voteProjectId != null and voteProjectId != ''">#{voteProjectId},
            </if>
        </trim>
    </insert>

    <update id="updateBaseVoteOption" parameterType="BaseVoteOption">
        update base_vote_option
        <trim prefix="SET" suffixOverrides=",">
            <if test="createBy != null">create_by =
                #{createBy},
            </if>
            <if test="createTime != null">create_time =
                #{createTime},
            </if>
            <if test="updateBy != null">update_by =
                #{updateBy},
            </if>
            <if test="updateTime != null">update_time =
                #{updateTime},
            </if>
            <if test="delFlag != null">del_flag =
                #{delFlag},
            </if>
            <if test="remark != null">remark =
                #{remark},
            </if>
            <if test="name != null">name =
                #{name},
            </if>
            <if test="sort != null">sort =
                #{sort},
            </if>
            <if test="status != null">status =
                #{status},
            </if>
            <if test="voteProjectId != null and voteProjectId != ''">vote_project_id =
                #{voteProjectId},
            </if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteBaseVoteOptionById" parameterType="String">
        delete from base_vote_option where id = #{id}
    </delete>

    <delete id="deleteBaseVoteOptionByIds" parameterType="String">
        delete from base_vote_option where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <update id="updateBaseVoteOptionByIds" parameterType="String">
        update base_vote_option set del_flag = '1'  where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>

</mapper>